

.spacingContainer {
    width: 100%;
    padding: 20px;
}

.container {
    width: 100%;
    display: flex;
    flex-direction: column;
}

.monospace {
    font-family: Monaco, Menlo, Consolas, "Courier New", FontAwesome, monospace;
}

.editor {
    background-color: #3E4349;
    color: #fff;
    padding: 10px;
    font-weight: bold;
}

.comment {
    color: #999999;
}

.string {
    color: #66FF66;
}

.funckey {
    color: #f8fba5;
}

.bool {
    color: #89f689;
}

.doc {
    background-color: #3E4349;
    color: #66FF66;
    font-weight: bold;
    display: block;
    width: 100%;
    border: none;
    height: auto;
    overflow-y: hidden;
}

.doc:focus {
    box-shadow: 0 0 5px rgba(81, 203, 238, 1);
    /* border: 1px solid rgba(81, 203, 238, 0.59); */
}

.keyword {
    color: #CC00FF;
    font-weight: bold;
}

.magic {
    color: #E06697;
    font-weight: bold;
}

.terminalContainer {
    background-color: #610B4B;
    color: #fff;
    padding: 5px;
    padding: 10px;
    margin-top: 10px;

    display: flex;
    flex-direction: column;
}

.terminal {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    /* align-items: baseline; */
    align-items: flex-start;
}

.terminalInput {
    background-color: #610B4B;
    color: #fff;
    border: none;
    flex-grow: 1;
    font-weight: bold;
    padding-left: 5px;
    padding-right: 5px;
}

.terminalInput:focus {
    box-shadow: 0 0 5px rgba(81, 203, 238, 1);
    /* border: 1px solid rgba(81, 203, 238, 0.59); */
}

.terminalEnter {
    padding: 0 2px 0 2px;
    margin: 0;
    background: transparent;
    color: white;
    border: none;
    font-weight: bolder;
    cursor: pointer;
    /* box-shadow: 0 0 5px rgba(255, 255, 255, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.59); */
}

.execPrefix {
    white-space: nowrap;
}

.dollar {
    color: #F3F781;
}

.apiResult {
    /* font-weight: bolder; */
    white-space: pre;
}

.apiApiError {
    color: yellow;
}

/* .serverErrorWapper {
    box-shadow: 0 0 5px rgb(238, 81, 81);
} */

.serverError {
    /* padding: 0 10px 0 10px; */
    margin-bottom: 1em;
    /* padding: .625em; */
    background: #0e90d2;
    /* background-color: rgb(14, 144, 210); */
    color: #fff;
    border: 1px solid #0c7cb5;
    border-top-color: rgb(12, 124, 181);
    border-right-color: rgb(12, 124, 181);
    border-bottom-color: rgb(12, 124, 181);
    border-left-color: rgb(12, 124, 181);
    border-radius: 0;

    background-color: #dd514c;
    border-color: #d83832;
    color: #fff;
    margin-top: 1em;
}

.optionRows {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.optionRow {
    width: 100%;
}

.optionLabel {
    display: inline-block;
    width: 30%;
    border-bottom: 1px dashed #bdbcbc;
}

.optionValueContainer {
    display: inline-block;
    width: 70%;
}

.optionDeleted {
    text-decoration: line-through;
}

.argsLine {
    line-height: 1.5em;
    min-height: 3em;
}


/* https://css-tricks.com/the-cleanest-trick-for-autogrowing-textareas/ */
.growWrap {
    /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
    display: grid;
}
.growWrap::after {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-replicated-value) " ";

    /* This is how textarea text behaves */
    white-space: pre-wrap;

    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
}
.growWrap > textarea {
    /* You could leave this, but after a user resizes, then it ruins the auto sizing */
    resize: none;

    /* Firefox shows scrollbar on growth, you can hide like this. */
    overflow: hidden;
}
.growWrap > textarea,
.growWrap::after {
    /* Identical styling required!! */
    border: 1px dotted white;
    /* padding: 0.5rem; */
    font: inherit;

    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;
}
